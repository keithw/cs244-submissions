====================
AIMD + Delay hybrid:

AIMD+Delay v6: 3.87 184 21.03 cs344g.keithw.org/report/?baller-1461856571-ohwoofoh

It was very clear that we needed to work on delay. Throughput of the
other competitors is around the same but our delay needs to
significantly improve.

The AIMD+Delay doesn't take into account what is the outstanding
traffic capacity nor the outstanding traffic of the sender, so we need
to focus on that.

====================
AIMD Second Version: 9-something

If we move to 1.4 * new_rtt, we get 11.68. Finally past 10.0
http://cs344g.keithw.org/report/?baller-1461809344-fierohbi

====================
AIMD First Version: 5cea7f135ecf233310589883adf95cc40327c83e

http://cs344g.keithw.org/report/?baller-1461806663-gaitaajo

We're not incrementing the cwnd fast enough, so a lot of capacity is
being wasted.

Are we detecting congestion fast enough? We need to think of another
way to detect congestion rather than some multiple of the estimated
rtt.

If we lower timeout from 1000ms to 100ms, we get a slight improvement
 to 9.03: http://cs344g.keithw.org/report?baller-1461808000-uteeshee

If we then detected congestion at 1.75 * new_rtt and incremented by
2.0/cwnd, we suffered a horrible result of 2:
http://cs344g.keithw.org/report/?baller-1461808364-eichichu

Using 1.5 * new_rtt and 1.5/cwnd still had a bad score of 5-something
http://cs344g.keithw.org/report?baller-1461808643-quahxaeg

====================
